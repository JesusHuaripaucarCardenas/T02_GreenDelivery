CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR2(150) NOT NULL,
    password VARCHAR2(250) NOT NULL,
    role_id NUMBER NOT NULL,
    name VARCHAR2(100) NOT NULL,
    last_name VARCHAR2(100) NOT NULL,
    birthdate DATE,
    phone VARCHAR2(15),
    sex VARCHAR2(10),
    document_type CHAR(3) DEFAULT 'DNI' NOT NULL,
    document_number VARCHAR2(20),
    creation_register TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    alternative_phone VARCHAR2(15),
    company_name VARCHAR2(50),
    license VARCHAR2(20),
    hire_date DATE,
    average_grade NUMBER(3,2) DEFAULT 0.00,
    total_deliveries NUMBER DEFAULT 0,
    status CHAR(1) DEFAULT 'A' NOT NULL
);

-- Restricciones de la tabla users
ALTER TABLE users ADD CONSTRAINT uk_users_email UNIQUE (email);
ALTER TABLE users ADD CONSTRAINT uk_users_document UNIQUE (document_type, document_number);
ALTER TABLE users ADD CONSTRAINT uk_users_license UNIQUE (license);
ALTER TABLE users ADD CONSTRAINT ck_users_email CHECK (email LIKE '%@%');
ALTER TABLE users ADD CONSTRAINT ck_users_status CHECK (status IN ('A','I','S'));
ALTER TABLE users ADD CONSTRAINT ck_users_sex CHECK (sex IN ('masculino', 'femenino', 'otro'));
ALTER TABLE users ADD CONSTRAINT ck_users_document_type CHECK (document_type IN ('DNI', 'RUC', 'CNE'));
ALTER TABLE users ADD CONSTRAINT ck_users_grade CHECK (average_grade BETWEEN 0.00 AND 5.00);
ALTER TABLE users ADD CONSTRAINT ck_users_deliveries CHECK (total_deliveries >= 0);
ALTER TABLE users ADD CONSTRAINT ck_users_phone CHECK (REGEXP_LIKE(phone, '^[0-9+\-\s()]+$'));
ALTER TABLE users ADD CONSTRAINT ck_users_driver_fields CHECK (
    (role_id != 3) OR
    (role_id = 3 AND document_number IS NOT NULL AND license IS NOT NULL AND hire_date IS NOT NULL)
);

-- Índices adicionales para users
CREATE INDEX idx_users_role ON users(role_id);
CREATE INDEX idx_users_status ON users(status);
CREATE INDEX idx_users_document_number ON users(document_number);
CREATE INDEX idx_users_creation_date ON users(creation_register);


-- TABLA DE VEHÍCULOS

CREATE TABLE vehicle (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    plate VARCHAR2(10) NOT NULL,
    vehicle_type VARCHAR2(20) NOT NULL,
    brand VARCHAR2(50),
    model VARCHAR2(50),
    year NUMBER(4),
    load_capacity NUMBER(7,2) DEFAULT 0,
    last_revision_date DATE,
    next_review DATE,
    maturity_insurance DATE,
    observation VARCHAR2(300),
    creation_register DATE DEFAULT SYSDATE NOT NULL,
    status CHAR(1) DEFAULT 'A' NOT NULL
);

-- Restricciones de la tabla vehicle
ALTER TABLE vehicle ADD CONSTRAINT uk_vehicle_plate UNIQUE (plate);
ALTER TABLE vehicle ADD CONSTRAINT ck_vehicle_status CHECK (status IN ('A','I','M','F')); -- A=Activo, I=Inactivo, M=Mantenimiento, F=Fuera de servicio
ALTER TABLE vehicle ADD CONSTRAINT ck_vehicle_capacity CHECK (load_capacity >= 0);
ALTER TABLE vehicle ADD CONSTRAINT ck_vehicle_plate_format CHECK (REGEXP_LIKE(plate, '^[A-Z0-9\-]+$'));
ALTER TABLE vehicle ADD CONSTRAINT ck_vehicle_revision_dates CHECK (next_review > last_revision_date OR next_review IS NULL OR last_revision_date IS NULL);

-- Índices para vehicle
CREATE INDEX idx_vehicle_type ON vehicle(vehicle_type);
CREATE INDEX idx_vehicle_status ON vehicle(status);
CREATE INDEX idx_vehicle_next_review ON vehicle(next_review);

-- TABLA DE ROLES

CREATE TABLE role (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(50) NOT NULL,
    description VARCHAR2(250),
    status CHAR(1) DEFAULT 'A' NOT NULL,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Restricciones de la tabla role
ALTER TABLE role ADD CONSTRAINT uk_role_name UNIQUE (name);
ALTER TABLE role ADD CONSTRAINT ck_role_status CHECK (status IN ('A','I'));
ALTER TABLE role ADD CONSTRAINT ck_role_name_length CHECK (LENGTH(name) >= 3);

-- TABLA DE DIRECCIONES

CREATE TABLE address (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    street VARCHAR2(200) NOT NULL,
    "number" VARCHAR2(10),
    district VARCHAR2(100) NOT NULL,
    postal_code NUMBER,
    reference VARCHAR2(250),
    latitude NUMBER(10,8),
    length NUMBER(11,8),
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    orders_id NUMBER NOT NULL
);

-- Restricciones de la tabla address
ALTER TABLE address ADD CONSTRAINT uk_address_location UNIQUE (street, "number", district);
ALTER TABLE address ADD CONSTRAINT ck_address_latitude CHECK (latitude BETWEEN -90 AND 90 OR latitude IS NULL);
ALTER TABLE address ADD CONSTRAINT ck_address_longitude CHECK (length BETWEEN -180 AND 180 OR length IS NULL);
ALTER TABLE address ADD CONSTRAINT ck_address_postal_code CHECK (postal_code > 0 OR postal_code IS NULL);
ALTER TABLE address ADD CONSTRAINT ck_address_street_length CHECK (LENGTH(street) >= 5);

-- Índices para address
CREATE INDEX idx_address_district ON address(district);
CREATE INDEX idx_address_postal_code ON address(postal_code);
